/**
 * This class is generated by jOOQ
 */
package me.taylorkelly.mywarp.dataconnections.jooq.tables;

import me.taylorkelly.mywarp.dataconnections.converter.UUIDBinaryConverter;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class World extends org.jooq.impl.TableImpl<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord> {

	private static final long serialVersionUID = -1345964263;

	/**
	 * The singleton instance of <code>mywarp.world</code>
	 */
	public static final me.taylorkelly.mywarp.dataconnections.jooq.tables.World WORLD = new me.taylorkelly.mywarp.dataconnections.jooq.tables.World();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord> getRecordType() {
		return me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord.class;
	}

	/**
	 * The column <code>mywarp.world.world-id</code>.
	 */
	public final org.jooq.TableField<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord, org.jooq.types.UInteger> WORLD_ID = createField("world-id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>mywarp.world.world</code>.
	 */
	public final org.jooq.TableField<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord, java.util.UUID> WORLD_ = createField("world", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false).asConvertedDataType(new UUIDBinaryConverter()), this, "");

	/**
	 * Create a <code>mywarp.world</code> table reference
	 */
	public World() {
		this("world", null);
	}

	/**
	 * Create an aliased <code>mywarp.world</code> table reference
	 */
	public World(java.lang.String alias) {
		this(alias, me.taylorkelly.mywarp.dataconnections.jooq.tables.World.WORLD);
	}

	private World(java.lang.String alias, org.jooq.Table<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord> aliased) {
		this(alias, aliased, null);
	}

	private World(java.lang.String alias, org.jooq.Table<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, me.taylorkelly.mywarp.dataconnections.jooq.Mywarp.MYWARP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord, org.jooq.types.UInteger> getIdentity() {
		return me.taylorkelly.mywarp.dataconnections.jooq.Keys.IDENTITY_WORLD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord> getPrimaryKey() {
		return me.taylorkelly.mywarp.dataconnections.jooq.Keys.KEY_WORLD_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<me.taylorkelly.mywarp.dataconnections.jooq.tables.records.WorldRecord>>asList(me.taylorkelly.mywarp.dataconnections.jooq.Keys.KEY_WORLD_PRIMARY, me.taylorkelly.mywarp.dataconnections.jooq.Keys.KEY_WORLD_U_WORLD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public me.taylorkelly.mywarp.dataconnections.jooq.tables.World as(java.lang.String alias) {
		return new me.taylorkelly.mywarp.dataconnections.jooq.tables.World(alias, this);
	}

	/**
	 * Rename this table
	 */
	public me.taylorkelly.mywarp.dataconnections.jooq.tables.World rename(java.lang.String name) {
		return new me.taylorkelly.mywarp.dataconnections.jooq.tables.World(name, null);
	}
}
