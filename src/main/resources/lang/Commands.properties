assets.description = Lists all warps owned by a player.
assets.help = Lists all warps owned by the user or the given player. Each warp is shown under the limit it is counted under.
assets.heading = {0}'s Warps
assets.total = Warps in {0} ({1}):
assets.public = Public Warps ({0}):
assets.private = Private Warps ({0}):

create.name-is-cmd = ''{0}'' is equivalent to a command and cannot be used as a name.
create.name-too-long = Warp names can only contain {0, number, integer} characters.
create.warp-exists = A warp called ''{0}'' already exists.

create.public.created-successful = Successfully created ''{0}''.
create.public.description = Creates a new public warp.
create.public.help = Creates a new public warp of the given name at the user's location. All users will be able to access it.

create.private.created-successful = Successfully created ''{0}''.
create.private.description = Creates a new private warp .
create.private.help = Creates a new private warp of the given name at the user's location. Only the creator and invited users will be able to access it.

delete.deleted-successful = You have deleted ''{0}''.
delete.description = Deletes a warp.
delete.help = Deletes the warp of the given name.

give.asked-successful = You have asked {0} to accept ''{1}'' as his own.
give.description = Gives a warp to an other player.
give.help = Gives the warp of the given name to the player of the given name, if he accepts it.\n\
   Use [-f] to ignore any warp-limits of the receiving player, or\n\
   [-d] to give the warp directly without asking for acceptation first.
give.receiver-limits = {0} already owns as much warps as possible. The player has to delete at least one warp in order to receive this one.
give.given-successful = You have given ''{0}'' to {1}.
give.givee-owner = {0} has given you ''{1}''.
give.is-owner = {0} is already the owner.

help.description = Displays the help.
help.help = Displays the help, starting at the given page.
help.heading = Help
help.note = Use '/<command> -?' to get more information about it.

import.description = Imports warps from previously used databases.
import.sqlite.description = Imports warps from a SQLite database.
import.sqlite.help: Imports warp from an up-to-date SQLite database within the given file into the current database.\n\
  The position of the SQLite file is parsed relatively to MyWarp's data-folder.
import.mysql.description = Imports warps from an up-to-date MySQL database into the current database.
import.mysql.help: Imports warp from an up-to-date MySQL database into the current database.\n\
  The MySQL server must be accessible from the given DSN which must include the database name, e.g. 'jdbc:mysql://localhost/mywarp'.
import.pre3-sqlite.description = Imports warps from a legacy SQLite database (pre 3.0).
import.pre3-sqlite.help: Imports warp from a legacy SQLite database (pre 3.0) into the current database.\n\
  The importation tries to extract the old data from the given table and convert it (UUIDs).\n\
  The position of the SQLite file is parsed relatively to MyWarp's data-folder.
import.pre3-mysql.description = Imports warps from a legacy MySQL database (pre 3.0).
import.pre3-mysql.help: Imports warp from a legacy MySQL database (pre 3.0) into the current database.\n\
  The importation tries to extract the old data from the given table and convert it (UUIDs).\n\
  The MySQL server must be accessible from the given DSN which must include the database, e.g. 'jdbc:mysql://localhost/mywarp'.

import.file-non-existent = The file ''{0}'' does not exist.
import.import-successful = {0,choice,0#No warps were|1#One warp was|1<{0,number,integer} warps were} successfully imported.
import.import-with-skips = {0,choice,0#No warps were|1# One warp was|1< {0,number,integer} warps were} imported, but {1,choice,1#one warp was|1<{1,number,integer} warps were} skipped because a warp with this name already exists:
import.no-connection = Could not establish database connection in order to import warps: {0}

invite.public = But ''{0}'' is still a public warp.
invite.description = Invites players or groups to a warp.
invite.help = Invites players or groups to the warp of the given name.\n\
  To invite a player, simply enter his name.\n\
  To invite a group, enter the name of group and use [-g].
invite.group.already-invited = The group ''{0}'' is already invited to this warp.
invite.group.successful = &bYou have invited the group {0} to ''{1}''.
invite.player.already-invited = {0} is already invited to this warp.
invite.player.is-creator = {0} is the creator, of course he is invited.
invite.player.player-invited = {0} has invited you to to ''{1}''.
invite.player.successful = You have invited {0} to ''{1}''.

info.created-by = Created by:
info.created-by-you = (that is you)
info.creation-date = Created on:
info.description = Prints information about a warp.
info.help: Prints all accessible information about the warp of the given name.
info.heading = Information about ''{0}'':
info.invited-groups = Invited groups:
info.invited-players = Invited players:
info.location = Location:
info.location.position = {0,number,integer}, {1,number,integer}, {2,number,integer} (in ''{3}'')
info.visits = Visits:
info.visits.per-day = {0,number,integer} ({1,number,#.###} visits per day)

list.by = by
list.description = Lists warps.
list.help = Lists all warps matching all of the given criteria.\n\
  Use [-c] to only display warps with a creator whose name matches the given query.\n\
  Use [-n] to only display warps whose name matches the given query.\n\
  Use [-w] to only display warps on a world whose name matches the given query.
list.heading = Warps
list.you = you

point.description = Points the user's compass to a warp.
point.help: Points the user's compass to the warp of the given name. To reset the compass back to the spawn point use this command without specifying a warp.
point.reset = Your compass now points back to the spawn point.
point.set = Your compass now guides you to ''{0}''.

private.already-private = ''{0}'' is already private.
private.description = Privatizes a warp.
private.help: Privatizes the warp of the given name. Players will be no longer able to visit it unless they are invited.
private.privatized = You have privatized ''{0}''.

public.already-public = ''{0}'' is already public.
public.description = Publicizes a warp.
public.help: Publicizes the warp of the given name. All players will be able to visit it, regardless if they are invited ot not.
public.publicized = You have publicized ''{0}''.

reload.description = Reloads configuration and warps.
reload.help = Reloads the configuration from disk and all warps from the configured database.
reload.reload-message = The configuration has been reloaded successfully!

uninvite.public =  But ''{0}'' is still public.
uninvite.description = Uninvites players or groups from a warp.
uninvite.help = Uninvites players or groups from the warp of the given name.\n\
  To uninvite a player, simply enter his name.\n\
  To uninvite a group, enter the name of group and use [-g].
uninvite.group.not-invited = The Group ''{0}'' is not invited to this warp.
uninvite.group.successful = You have uninvited the group {0} from ''{1}''.
uninvite.player.is-creator = You cannot uninvite the creator.
uninvite.player.not-invited = {0} is not invited to this warp.
uninvite.player.player-uninvited = You are no longer invited to ''{0}''. Sorry.
uninvited.player.successful = You have uninvited {0} from ''{1}''.

update.description = Updates the location of a warp.
update.help = Updates the location of the warp of the given name to the one of the user.
update.update-successful = You have updated {0}''s location.

warp-to.cooldown.ended = You have cooled down, feel free to use warps again.
warp-to.description = Teleports the user to a warp.
warp-to.warmup.cancelled-damage = You must not take damage while warming up. Your warmup was cancelled.
warp-to.warmup.cancelled-move = You must not move while warming up. Your warmup was cancelled.
warp-to.warmup.started = You will be teleported to ''{0}'' in {1,number} seconds.

warp-player.description = Teleports a player to a warp.
warp-player.help = Teleports the player of the given name to the warp of the given name.\n\
   This command works on all warps the user may use, regardless if the teleported player may use them too.
warp-player.teleport-successful = You have teleported {0} to ''{1}''.
warp-player.teleport-failed = You tried to teleport {0} to ''{1}'', but this warp is inaccessible.

welcome.description = Changes the welcome message of a warp.
welcome.help: Changes the welcome message of the warp of the given name. The user will be asked to enter the welcome message afterwards.

exception.limit-exceeded.delete-warps = Delete some of your warps to create more.
exception.limit-exceeded.private = You have reached your maximum of private warps ({0, number, integer}).
exception.limit-exceeded.public = You have reached your maximum of public warps ({0, number, integer}).
exception.limit-exceeded.total = You have reached your maximum of warps ({0, number, integer}).

exception.no-such-profile = Could not find a game profile for ''{0}''. Is this a valid user?
exception.no-such-player = Could not find a player named ''{0}''. Is he online?
exception.no-such-warp = No such warp ''{0}''.
exception.no-such-warp.suggestion = Did you mean ''{0}''?
exception.no-such-world: The operation tries to access the world ''{0}'' that is currently not present on the server.
exception.illegal-command-sender: This command cannot be used in the current context.
exception.timer-running: You still need to wait {0,number,integer} seconds until you can do this.
exception.unknown = An internal error has occurred. Please contact your administrator for assistance.
exception.insufficient-permission = Insufficient permission.
